name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  DOTNET_VERSION: '9.0.x'
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:
  executable-startup-test-windows:
    name: Test Windows Executables (Fast Fail)
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    # Skip explicit restore - dotnet publish will restore as needed
    - name: Test Windows x64 executables
      shell: powershell
      run: |
        .\scripts\test-executables.ps1 -Platform "win-x64" -TestDir "test-output"
        
    - name: Upload Windows test outputs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: windows-executable-test-outputs
        path: |
          test-output/cli/*.txt
          test-output/gui/*.txt

  # executable-startup-test-macos:
  #   name: Test macOS Executables (Fast Fail)
  #   runs-on: macos-latest
  #   
  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v4
  #     with:
  #       fetch-depth: 0
  #       
  #   - name: Setup .NET
  #     uses: actions/setup-dotnet@v4
  #     with:
  #       dotnet-version: ${{ env.DOTNET_VERSION }}
  #       
  #   - name: Restore dependencies
  #     run: dotnet restore
  #     
  #   - name: Test macOS ARM64 executables
  #     shell: bash
  #     run: |
  #       ./scripts/test-executables.sh osx-arm64 test-output
  #       
  #   - name: Upload macOS test outputs
  #     if: always()
  #     uses: actions/upload-artifact@v4
  #     with:
  #       name: macos-executable-test-outputs
  #       path: |
  #         test-output/cli/*.txt
  #         test-output/gui/*.txt

  build-and-test:
    name: Build and Test
    runs-on: ${{ matrix.os }}
    needs: [executable-startup-test-windows]
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-latest]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
        
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
          
    - name: Build solution
      run: |
        dotnet build --configuration Release --verbosity minimal
      
    - name: Run unit tests
      run: |
        dotnet test tests/DocxTemplate.Core.Tests --configuration Release --verbosity minimal
        dotnet test tests/DocxTemplate.Infrastructure.Tests --configuration Release --verbosity minimal
        dotnet test tests/DocxTemplate.CLI.Tests --configuration Release --verbosity minimal
